---
import { Icon } from "astro-icon/components";
import RowEntry from "../components/RowEntry.astro";
import SectionTitle from "../components/SectionTitle.astro";
import SocialIcon from "../components/SocialIcon.astro";
import Title from "../components/Title.astro";
import "../styles/global.css";
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>CV</title>
    </head>
    <body class="dark:bg-black">
        <button id="dark-mode-toggle" class="mt-2 mb-2">
            <Icon name="tabler:sun" class="h-6 w-6 dark:text-white" />
        </button>

        <Title
            city="Zagreb"
            country="Croatia"
            name="Armin Imširević"
            email="armin.imsirevic@outlook.com"
        />
        
        <div id="employment" class="mb-3">
            <SectionTitle title="EMPLOYMENT" />
            <RowEntry
                companyName="Infobip"
                title="Senior Full Stack Software Engineer"
                timeSpan={{ start: "Feb. 2023", end: "Present" }}
                location="Zagreb, Croatia"
                typeOfEmployment="Hybrid"
                descriptionList={[
                    "Led architecture and delivery of enterprise systems using .NET, React, Kotlin, Node.js, and Java.",
                    "Gained full technical autonomy to define practices, select libraries, and lead implementation.",
                    "Mentored 5 engineers, raising team delivery standards across testing, design, and quality.",
                    "Onboarded high-volume clients, resulting in a 12% increase in Infobip's SMS traffic.",
                ]}
            />
            <RowEntry
                companyName="Infobip"
                title="Full Stack Software Engineer"
                timeSpan={{ start: "Jun. 2020", end: "Feb. 2023" }}
                location="Zagreb, Croatia"
                typeOfEmployment="Remote"
                descriptionList={[
                    "Rebuilt legacy login/signup systems, cutting auth-related bug reports by 80% and reducing tech debt by 65%.",
                    "Rapidly upskilled in Kotlin and C#, contributing across multiple stacks (.NET, Java, Node, React).",
                    "Integrated internal and external systems to boost platform extensibility and performance.",
                ]}
            />
            <RowEntry
                companyName="Oradian"
                title="Full Stack Software Engineer"
                timeSpan={{ start: "Sep. 2018", end: "Jun. 2020" }}
                typeOfEmployment="Remote"
                location="Zagreb, Croatia"
                descriptionList={[
                    "Shipped React features on top of Scala services for Oradian's banking platform.",
                    "Learned React and taught Scala to frontend engineers to enable better cross-stack collaboration.",
                    "Delivered production-grade UI under pressure in coordination with product and UX.",
                ]}
            />
            <RowEntry
                companyName="Oradian"
                title="Backend Software Engineer"
                timeSpan={{ start: "Jan. 2017", end: "Jun. 2020" }}
                typeOfEmployment="Remote"
                location="Zagreb, Croatia"
                descriptionList={[
                    "Developed scalable Scala-based backend features for the core banking engine.",
                    "Built a revenue-driving feature that contributed to an 8% increase in company revenue.",
                    "Improved system reliability and throughput by optimizing service-level data flows.",
                ]}
            />
            <RowEntry
                companyName="Oradian"
                title="QA Engineer (Intern)"
                timeSpan={{ start: "Jun. 2016", end: "Jan. 2017" }}
                typeOfEmployment="Onsite"
                location="Zagreb, Croatia"
                descriptionList={[
                    "Automated tests using Selenium, boosting code coverage from ~10% to ~60%.",
                    "Identified and resolved critical issues, reducing production bugs significantly."
                ]}
            />
        </div>

        <div id="education" class="mb-6">
            <SectionTitle title="Education" />
            <RowEntry
                companyName="RIT Croatia"
                location="Zagreb, Croatia"
                descriptionList={[
                    "Bachelor’s Degree, Information Technology"
                ]}
            />
        </div>

        <div id="skills" class="mb-6">
            <SectionTitle title="Skills" />
            <ul class="mt-1 list-disc pl-6 text-xs dark:text-white">
                <li>
                    <span class="font-bold">Frontend:</span> React.js, TypeScript, JavaScript, HTML/CSS
                </li>
                <li>
                    <span class="font-bold">Backend:</span> Node.js, Java, Kotlin, C#, .NET, SQL, MongoDB
                </li>
                <li>
                    <span class="font-bold">Cloud & DevOps:</span> Docker, Kubernetes, CI/CD, Git, Jenkins, Postman
                </li>
                <li>
                    <span class="font-bold">Tools:</span> Visual Studio Code, IntelliJ IDEA, JIRA, Confluence
                </li>
                <li>
                    <span class="font-bold">Practices:</span> Agile, Scrum, TDD, CI/CD, System Design, Code Review, Mentoring
                </li>
                <li>
                    <span class="font-bold">Languages:</span> English (fluent), Croatian (native)
                </li>
            </ul>
        </div>

        <div id="social" class="mb-2 flex flex-row justify-center">
            <div class="mr-4">
                <SocialIcon
                    icon="fa-brands:github"
                    label="github"
                    url="https://www.github.com/"
                />
            </div>
            <div class="mr-4">
                <SocialIcon
                    icon="fa-brands:linkedin"
                    label="linkedin"
                    url="https://www.linkedin.com/"
                />
            </div>
            <div class="mr-4">
                <SocialIcon
                    icon="fa-brands:medium"
                    label="medium"
                    url="https://www.medium.com/"
                />
            </div>
            <div class="mr-4">
                <SocialIcon
                    icon="fa-brands:dev"
                    label="dev"
                    url="https://www.dev.to/"
                />
            </div>
            <div class="mr-4">
                <SocialIcon
                    icon="fa-brands:stack-overflow"
                    label="stack-overflow"
                    url="#"
                />
            </div>
            <div>
                <SocialIcon
                    icon="ant-design:global-outlined"
                    label="website"
                    url="https://www.stackoverflow.com/"
                />
            </div>
        </div>
        <script is:inline>
            if (
                localStorage.theme === "dark" ||
                (!("theme" in localStorage) &&
                    window.matchMedia("(prefers-color-scheme: dark)").matches)
            ) {
                document.documentElement.classList.add("dark");
            } else {
                document.documentElement.classList.remove("dark");
            }

            window.onload = function () {
                const element = document.getElementById("dark-mode-toggle");

                if (element) {
                    element.addEventListener("click", () => {
                        document.documentElement.classList.toggle("dark");

                        localStorage.theme =
                            document.documentElement.classList.contains("dark")
                                ? "dark"
                                : "light";
                    });
                }
            };

            const breakpoints = {
                sm: 640,
                md: 768,
                lg: 1024,
                xl: 1280,
                '2xl': 1536
            };

            function getTailwindBreakpoint() {
                const width = window.innerWidth;
                if (width >= breakpoints['2xl']) return '2xl';
                if (width >= breakpoints.xl) return 'xl';
                if (width >= breakpoints.lg) return 'lg';
                if (width >= breakpoints.md) return 'md';
                if (width >= breakpoints.sm) return 'sm';
                return 'xs';
            }

            function logBreakpoint() {
                console.log('Current Tailwind breakpoint:', getTailwindBreakpoint());
                window.breakpoint = getTailwindBreakpoint();
            }

            // Log on load
            logBreakpoint();

            // Log on resize
            window.addEventListener('resize', logBreakpoint);

        </script>
    </body>
</html>
