---
import { getCollection } from 'astro:content';
import { blogSetting } from '../../data/config';
import PaginatedUslugeLayout from '../../components/usluge/PaginatedUslugeLayout.astro';

// Enable server-side rendering for this page
export const prerender = false;

// Get search params from URL - this works in SSR mode
const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get('page') || '1');
const searchQuery = url.searchParams.get('search') || '';

// Get all services without any filtering
const allServices = await getCollection('usluge');

// Filter out unpublished services
let filteredServices = allServices.filter(service => {
    return import.meta.env.DEV || service.data.publish !== false;
});

// Apply search filter if search query exists
if (searchQuery) {
    filteredServices = filteredServices.filter(service => {
        const searchLower = searchQuery.toLowerCase();
        const titleMatch = service.data.title.toLowerCase().includes(searchLower);
        const excerptMatch = service.data.excerpt?.toLowerCase().includes(searchLower) || false;
        const categoryMatch = service.data.categories?.some(category => 
            category.toLowerCase().includes(searchLower)
        ) || false;
        
        return titleMatch || excerptMatch || categoryMatch;
    });
}

// Calculate pagination
const totalServices = filteredServices.length;
const totalPages = Math.ceil(totalServices / blogSetting.postsPerPage);
const start = (currentPage - 1) * blogSetting.postsPerPage;
const end = start + blogSetting.postsPerPage;
const paginatedServices = filteredServices.slice(start, end);

// Dynamic title and subtitle based on search
const title = searchQuery ? `Rezultati pretrage za "${searchQuery}"` : 'Naše Usluge';
const subtitle = searchQuery 
    ? `Pronađeno ${totalServices} usluga za "${searchQuery}"`
    : 'Pogledajte naše usluge i pronađite rešenje za vaš prostor';
---

<PaginatedUslugeLayout
    usluge={paginatedServices}
    currentPage={currentPage}
    totalPages={totalPages}
    baseUrl="/usluge"
    title={title}
    subtitle={subtitle}
    searchQuery={searchQuery}
/>

